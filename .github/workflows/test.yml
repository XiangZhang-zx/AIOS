jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      # Set test scope
      - name: Test AIOS
        env:
          # Use API mode instead of local model
          AIOS_LLM_BACKEND: "google" 
          AIOS_LLM_NAME: "gemini-1.5-flash"
        run: |
          # Avoid running multiple large tests
          # Clean up unnecessary processes
      
      - name: Run AIOS kernel in background
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          # Set environment variable when starting kernel
          export GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}
          bash runtime/launch_kernel.sh &
          
          # Add kernel log output
          tail -f logs &
          
          # Wait for kernel to start (10 seconds should be enough)
          sleep 10
          
          # Check if kernel is running
          if curl -s http://localhost:8000/health > /dev/null; then
            echo "Kernel started successfully"
          else
            echo "Error: Kernel failed to start"
            exit 1
          fi

      - name: Run the run-agent code
        env:
          # Use GitHub Secrets for API key
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          # Verify if API key is set
          if [ -z "$GEMINI_API_KEY" ]; then
            echo "Error: GEMINI_API_KEY is not set in GitHub Secrets"
            exit 1
          fi
          # Use environment variable for API key
          export GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}
          # Add log output
          run-agent \
            --llm_name gemini-1.5-flash \
            --llm_backend google \
            --agent_name_or_path demo_author/demo_agent \
            --task "Tell me what is core idea of AIOS" \
            --aios_kernel_url http://localhost:8000 \
            2>&1 | tee agent.log

      - name: Upload logs
        if: always()  # Upload logs even if job fails
        uses: actions/upload-artifact@v4.4.3
        with:
          name: aios-logs
          path: |
            logs
            agent.log
            kernel.pid

      - name: Collect debug information
        if: failure()
        run: |
          echo "=== Kernel Logs ==="
          cat logs
          echo "=== Environment Variables ==="
          env | grep -i api_key || true
          echo "=== Process Status ==="
          ps aux | grep kernel
